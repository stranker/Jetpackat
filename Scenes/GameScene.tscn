[gd_scene load_steps=66 format=2]

[ext_resource path="res://Sprites/Background/HouseBroken.png" type="Texture" id=1]
[ext_resource path="res://Sprites/Background/House.png" type="Texture" id=2]
[ext_resource path="res://Sprites/Background/SmokeParticle.png" type="Texture" id=3]
[ext_resource path="res://Sprites/Background/white_circle.png" type="Texture" id=4]
[ext_resource path="res://Sprites/Background/Bg1.png" type="Texture" id=5]
[ext_resource path="res://Sprites/Background/Bg2.png" type="Texture" id=6]
[ext_resource path="res://Sprites/Background/Star2.png" type="Texture" id=7]
[ext_resource path="res://Sprites/Background/Bg3.png" type="Texture" id=8]
[ext_resource path="res://Sprites/Background/Star3.png" type="Texture" id=9]
[ext_resource path="res://Object/Player.tscn" type="PackedScene" id=10]
[ext_resource path="res://Sprites/Collectables/Magnet.png" type="Texture" id=12]
[ext_resource path="res://Sprites/Collectables/Coin.png" type="Texture" id=13]
[ext_resource path="res://Sprites/Collectables/Fish.png" type="Texture" id=14]
[ext_resource path="res://Sprites/UI/PauseButton.png" type="Texture" id=15]
[ext_resource path="res://Sprites/UI/PauseButtonPressed.png" type="Texture" id=16]
[ext_resource path="res://Scenes/FuelBar.tscn" type="PackedScene" id=17]
[ext_resource path="res://Scenes/PausePanel.tscn" type="PackedScene" id=18]
[ext_resource path="res://Sprites/PowerUps/AegisWings.png" type="Texture" id=19]
[ext_resource path="res://Object/Enemies/Kite.tscn" type="PackedScene" id=20]
[ext_resource path="res://Object/Enemies/Bulldog.tscn" type="PackedScene" id=21]
[ext_resource path="res://Scenes/RecoverPanel.tscn" type="PackedScene" id=22]
[ext_resource path="res://Object/Misc/PoolManager.gd" type="Script" id=23]
[ext_resource path="res://Scenes/ConfigPanel.tscn" type="PackedScene" id=24]
[ext_resource path="res://Scenes/DeadPanel.tscn" type="PackedScene" id=25]
[ext_resource path="res://Sprites/Tutorial/PawTutorial.png" type="Texture" id=26]
[ext_resource path="res://Scenes/InitialDarker.tscn" type="PackedScene" id=27]
[ext_resource path="res://Scenes/TransitionScene.tscn" type="PackedScene" id=28]
[ext_resource path="res://Sprites/Cat/CatHead.png" type="Texture" id=29]
[ext_resource path="res://Object/Collectable/CoinCluster.tscn" type="PackedScene" id=30]
[ext_resource path="res://Object/Collectable/Fish.tscn" type="PackedScene" id=31]
[ext_resource path="res://Object/PowerUp/FuelCan.tscn" type="PackedScene" id=32]
[ext_resource path="res://Object/PowerUp/Magnet.tscn" type="PackedScene" id=33]
[ext_resource path="res://Object/PowerUp/AegisWings.tscn" type="PackedScene" id=34]
[ext_resource path="res://Object/Enemies/PaperPlane.tscn" type="PackedScene" id=35]
[ext_resource path="res://Object/Enemies/Bird.tscn" type="PackedScene" id=36]
[ext_resource path="res://Object/Enemies/Condor.tscn" type="PackedScene" id=37]
[ext_resource path="res://Object/Enemies/Ovni.tscn" type="PackedScene" id=38]
[ext_resource path="res://Object/Misc/EnemySpawner.tscn" type="PackedScene" id=39]
[ext_resource path="res://Object/Misc/CurrencySpawner.tscn" type="PackedScene" id=40]
[ext_resource path="res://Object/Misc/PowerUpSpawner.tscn" type="PackedScene" id=41]
[ext_resource path="res://Fonts/retron_90.tres" type="DynamicFont" id=42]
[ext_resource path="res://Scenes/TimedBanner.tscn" type="PackedScene" id=43]
[ext_resource path="res://Fonts/retron_80_outlined.tres" type="DynamicFont" id=44]
[ext_resource path="res://Sprites/Shop/UI/upgrade_coin_icon.png" type="Texture" id=45]
[ext_resource path="res://Object/PowerUp/CoinMultiplier.tscn" type="PackedScene" id=46]
[ext_resource path="res://Object/PowerUp/YarnBall.tscn" type="PackedScene" id=47]
[ext_resource path="res://Sprites/Collectables/YarnBall.png" type="Texture" id=48]
[ext_resource path="res://Fonts/retron_150.tres" type="DynamicFont" id=49]

[sub_resource type="GDScript" id=1]
script/source = "extends Node

var playing : bool = false
var player_height : int = 0
var fuel : int = 0
var end_play : bool = false

var coins : int = 0
var fish : int = 0

onready var tutorial_done : bool = GameManager.tutorial_done
onready var fuel_item : ItemManager.UpgradeItem = ItemManager.get_upgrade_item_by_type(ItemManager.UpgradeType.ON_FUEL)
onready var fuel_master_time : float = fuel_item.get_current_modifier()

onready var ui_game = $UIGame

signal on_fuel_completed(time)
signal on_coin_multiplier(time)
signal on_magnet(time)
signal on_aegis(time)
signal on_yarn_taken()

var showing_ad : bool = false

func _ready():
	AudioManager.create_soundtrack()
	$UIGame/UI/RestartTransition.hide()
	player_height = 0
	GameManager.reset_stats()
	$UIGame.update_UI_labels()
	if tutorial_done:
		$UIGame.set_tutorial_done()
	AdsManager.connect(\"interstitial_closed\", self, \"on_interstitial_closed\")
	AdsManager.connect(\"interstitial_failed\", self, \"on_interstitial_failed\")
	AdsManager.load_ads()
	pass

func _input(event):
	if event is InputEventKey and !event.is_echo() and event.is_pressed():
		if event.scancode == KEY_1:
			add_fuel()
	pass

func start_game():
	playing = !playing
	GameManager.playing = playing
	pass

func _on_Player_start_playing():
	start_game()
	pass # Replace with function body.

func add_fuel():
	fuel += 1
	if fuel % 10 == 0 and fuel > 1:
		fuel = 0
		emit_signal(\"on_fuel_completed\", fuel_master_time)
	$UIGame.add_fuel(fuel)
	pass

func add_fish(val):
	fish += val
	GameManager.fishes += val
	$UIGame.update_fishes_label()
	pass

func add_coin(val):
	coins += val
	GameManager.coins += val
	$UIGame.update_coin_label()
	pass

func _on_Player_current_height(value):
	update_height(value)
	pass # Replace with function body.

func update_height(val):
	if val > player_height:
		player_height = val
		GameManager.player_height = player_height
	pass

func end_game():
	GameManager.fuel = fuel
	playing = false
	pass

func _on_Player_dead():
	end_game()
	pass # Replace with function body.

func restart_game():
	get_tree().reload_current_scene()
	pass

func _on_Currency_button_down():
	GameManager.coins = 99999
	GameManager.fishes = 99999
	$UIGame.update_UI_labels()
	GameManager.save_game_data()
	pass # Replace with function body.

func _on_Button_button_down():
	$UIGame/DebugPanel.hide()
	pass # Replace with function body.

func _on_DebugButton_button_down():
	$UIGame/DebugPanel.show()
	pass # Replace with function body.

func _on_ResetGame_button_down():
	GameManager.reset_game_state()
	pass # Replace with function body.

func _on_Height_gui_input(event):
	if event is InputEventKey:
		if event.scancode == KEY_ENTER:
			if $UIGame/DebugPanel/VBoxContainer/Height.text != '':
				var height = int($UIGame/DebugPanel/VBoxContainer/Height.text)
				$Player._on_Invencible_button_down()
				$Player.global_position = Vector2($Player.position.x,-height * 100)
	pass # Replace with function body.

func _on_ToggleEnemies_toggled(button_pressed):
	$EnemySpawner.activated = button_pressed
	pass # Replace with function body.

func _on_ToggleCollectables_toggled(button_pressed):
	$ItemClusterSpawner.activated = button_pressed
	pass # Replace with function body.

func _on_ComboButton_button_down():
	add_fuel()
	pass # Replace with function body.

func _on_DeadPanel_restart_game():
	GameManager.add_run()
	if GameManager.can_show_interstitial():
		AdsManager.show_interstitial()
		showing_ad = true
	else:
		show_restart_anim()
	pass # Replace with function body.

func _on_RestAnim_animation_finished(anim_name):
	end_game()
	restart_game()
	pass # Replace with function body.

func on_interstitial_closed():
	if showing_ad:
		show_restart_anim()
	pass

func on_interstitial_failed():
	if !playing:
		show_restart_anim()
	pass

func on_coin_multiplier(time):
	GameManager.coin_value = 2
	emit_signal(\"on_coin_multiplier\", time)
	pass

func on_aegis(time):
	emit_signal(\"on_aegis\", time)

func on_magnet_taken(time):
	emit_signal(\"on_magnet\", time)

func on_yarn_taken():
	GameManager.yarn_balls += 1
	emit_signal(\"on_yarn_taken\")

func show_restart_anim():
	Debug.debug(\"Show restart\")
	$UIGame/UI/RestartTransition.show()
	$UIGame/UI/RestartTransition/RestAnim.play('Start')
	pass

func _on_RecoverPanel_accept_recover():
	playing = true
	GameManager.on_player_recover()
	$Player.recover()
	pass # Replace with function body.

func _on_PauseButton_button_down():
	get_tree().paused = true
	pass # Replace with function body.

func _on_Anim_animation_finished(anim_name):
	get_tree().paused = false
	$UIGame/UI/PauseButton.show()
	pass # Replace with function body.

func _on_UIGame_on_aegis_timeout():
	$Player.on_invencible_timeout()
	pass # Replace with function body.

func _on_UIGame_on_multiplier_timeout():
	GameManager.coin_value = 1
	pass # Replace with function body.

func _on_UIGame_on_magnet_timeout():
	$Player.deactivate_magnet()
	pass # Replace with function body.

func _on_DeadPanel_duplicate_currency():
	GameManager.coins += coins
	GameManager.fishes += fish
	pass # Replace with function body.
"

[sub_resource type="GDScript" id=2]
script/source = "extends Node2D

export (Texture) var house_broken

func _ready():
	if GameManager.easter:
		$House.texture = house_broken

func _on_VisibilityNotifier2D_screen_exited():
	$CPUParticles2D.emitting = false
	visible = false
	set_process(false)
	pass # Replace with function body.

func _process(delta):
	var dist = $CatShadow.position.distance_to(GameManager.player.position)
	$CatShadow.modulate.a = 100.0 / dist
	$CatShadow.position.x = GameManager.player.position.x
	pass
"

[sub_resource type="RectangleShape2D" id=3]
extents = Vector2( 51.2298, 12.5829 )

[sub_resource type="Gradient" id=4]
colors = PoolColorArray( 0.730469, 0.730469, 0.730469, 1, 0, 0, 0, 0 )

[sub_resource type="GDScript" id=5]
script/source = "extends ParallaxBackground

export var space_height : int
export (Array, Color) var color_list
var color_idx = 0
var on_space : bool = false

func set_background_darker(value):
	if value > color_idx * space_height / color_list.size() and !$Tween.is_active():
		$Tween.remove_all()
		$Tween.interpolate_property($ParallaxLayer/Bg1,'self_modulate',
		$ParallaxLayer/Bg1.self_modulate, color_list[color_idx], 2, Tween.TRANS_LINEAR,Tween.EASE_IN)
		$Tween.start()
		color_idx += 1
	pass

func change_to_space():
	on_space = !on_space
	$Tween.stop_all()
	$Tween.interpolate_property($ParallaxLayer/Bg1,'self_modulate',$ParallaxLayer/Bg1.self_modulate, Color.black, 2, Tween.TRANS_LINEAR,Tween.EASE_IN)
	$Tween.interpolate_property($ParallaxLayer2/Cloud1, 'modulate',$ParallaxLayer2/Cloud1.modulate, Color(0,0,0,0), 2, Tween.TRANS_LINEAR,Tween.EASE_IN)
	$Tween.interpolate_property($ParallaxLayer3/Cloud2, 'modulate',$ParallaxLayer3/Cloud2.modulate, Color(0,0,0,0), 2, Tween.TRANS_LINEAR,Tween.EASE_IN)
	$Tween.interpolate_property($ParallaxLayer2/Star1, 'modulate',$ParallaxLayer2/Star1.modulate, Color(1,1,1,1), 2, Tween.TRANS_LINEAR,Tween.EASE_IN)
	$Tween.interpolate_property($ParallaxLayer3/Star2, 'modulate',$ParallaxLayer3/Star2.modulate, Color(1,1,1,1), 2, Tween.TRANS_LINEAR,Tween.EASE_IN)
	$Tween.start()
	pass

func _on_Player_current_height(value):
	if value > space_height:
		change_to_space()
	else:
		set_background_darker(value)
	pass # Replace with function body.
"

[sub_resource type="GDScript" id=6]
script/source = "extends CanvasLayer

var fuel_count : int = 0
export var height_tutorial: int
var tutorial_done : bool = false

onready var coin_anim = $UI/UpperPanel/CoinPanel/CoinLabel/CoinControl/Anim
onready var coin_label = $UI/UpperPanel/CoinPanel/CoinLabel

onready var fish_anim = $UI/UpperPanel/FishPanel/FishLabel/FishControl/Anim
onready var fish_label = $UI/UpperPanel/FishPanel/FishLabel

onready var meter_label = $UI/UpperPanel/MeterPanel/MeterLabel

onready var multiplier_banner = $UI/UpperPanel/TimedBanners/VBC/CoinBanner
onready var magnet_banner = $UI/UpperPanel/TimedBanners/VBC/MagnetBanner
onready var aegis_banner = $UI/UpperPanel/TimedBanners/VBC/AegisBanner

onready var yarn_anim = $UI/UpperPanel/YarnPanel/YarnLabel/YarnControl/Anim
onready var yarn_label = $UI/UpperPanel/YarnPanel/YarnLabel

signal on_multiplier_timeout()
signal on_magnet_timeout()
signal on_aegis_timeout()

func _ready():
	$UI/TransitionScene.play_random_backwards()
	multiplier_banner.connect(\"on_timed_banner_timeout\", self, \"on_multiplier_timeout\")
	magnet_banner.connect(\"on_timed_banner_timeout\", self, \"on_magnet_timeout\")
	aegis_banner.connect(\"on_timed_banner_timeout\", self, \"on_aegis_timeout\")
	pass

func update_coin_label():
	coin_label.text = str(GameManager.coins)
	coin_anim.play('AddCoin')
	pass

func update_fishes_label():
	fish_label.text = str(GameManager.fishes)
	fish_anim.play('AddFish')
	pass

func update_meters_label():
	meter_label.text = str(GameManager.player_height)
	pass

func update_UI_labels():
	update_coin_label()
	update_fishes_label()
	update_meters_label()
	pass

func _on_PauseButton_button_down():
	$UI/PauseButton.hide()
	pass # Replace with function body.

func show_deadpanel():
	$UI/DeadPanel.init()
	$UI/PauseButton.hide()
	pass

func exit_play():
	$UI/TransitionScene.play_random()
	pass

func _on_Anim_animation_finished(anim_name):
	if !$UI/TransitionScene.has_played:
		get_tree().change_scene('res://Scenes/MainMenu.tscn')
	pass # Replace with function body.

func add_fuel(val):
	$UI/FuelBar.add_fuel()
	fuel_count = val
	pass

func set_tutorial_done():
	$UI/Tutorial/InitialTap.hide()
	get_parent().get_node('Player').disable_tutorial()
	pass

func _on_Player_current_height(value):
	update_meters_label()
	if !tutorial_done and value >= height_tutorial:
		tutorial_done = true
		$UI/Tutorial/InitialTap/Anim.play('End')
		get_parent().get_node('Player').hide_tutorial_arrow()
	pass # Replace with function body.

func _on_TransitionScene_finished():
	$UI/UpperPanel/Anim.play('StartRound')
	pass # Replace with function body.

func _on_PausePanel_on_continue():
	$UI/PauseTimer/Anim.play('Countdown')
	pass # Replace with function body.

func _on_PausePanel_on_home():
	exit_play()
	pass # Replace with function body.

func _on_PausePanel_on_config():
	$UI/ConfigPanel.start()
	pass # Replace with function body.

func check_tutorial():
	if !GameManager.tutorial_done:
		GameManager.tutorial_done = true
		set_tutorial_done()
	pass

func show_recover_panel():
	$UI/RecoverPanel.start()
	$UI/PauseButton.hide()
	pass

func _on_RecoverPanel_cancel_recover():
	show_deadpanel()
	pass # Replace with function body.

func _on_RecoverPanel_accept_recover():
	$UI/PauseTimer/Anim.play('Countdown')
	pass # Replace with function body.

func _on_Player_show_dead_ui():
	check_tutorial()
	if GameManager.can_show_recover():
		show_recover_panel()
	else:
		show_deadpanel()
	pass # Replace with function body.

func _on_GameScene_on_coin_multiplier(time):
	multiplier_banner.initialize(time)
	pass # Replace with function body.

func _on_GameScene_on_aegis(time):
	aegis_banner.initialize(time)
	pass # Replace with function body.

func _on_GameScene_on_magnet(time):
	magnet_banner.initialize(time)
	pass # Replace with function body.

func _on_GameScene_on_fuel_completed(time):
	aegis_banner.initialize(time)
	pass # Replace with function body.

func on_multiplier_timeout():
	emit_signal(\"on_multiplier_timeout\")
	pass

func on_magnet_timeout():
	emit_signal(\"on_magnet_timeout\")
	pass

func on_aegis_timeout():
	emit_signal(\"on_aegis_timeout\")
	pass

func _on_GameScene_on_yarn_taken():
	yarn_label.text = str(GameManager.yarn_balls)
	if GameManager.yarn_balls == 1:
		yarn_anim.play(\"Enter\")
	else:
		yarn_anim.play(\"AddYarn\")
	pass # Replace with function body.
"

[sub_resource type="StyleBoxFlat" id=7]
bg_color = Color( 0.705882, 0.137255, 0.0745098, 1 )
border_width_top = 10
border_width_right = 10
border_width_bottom = 10
border_color = Color( 0.623529, 0.117647, 0.192157, 1 )
corner_radius_top_right = 20
corner_radius_bottom_right = 20
corner_detail = 2
expand_margin_left = 30.0
expand_margin_right = 110.0
shadow_color = Color( 0, 0, 0, 0.235294 )
shadow_size = 6

[sub_resource type="Animation" id=8]
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath("Coin:rect_scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3, 0.5 ),
"transitions": PoolRealArray( 0.5, 1, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 1.8, 1.8 ), Vector2( 1, 1 ) ]
}

[sub_resource type="StyleBoxFlat" id=9]
bg_color = Color( 0.705882, 0.137255, 0.0745098, 1 )
border_width_left = 10
border_width_top = 10
border_width_bottom = 10
border_color = Color( 0.623529, 0.117647, 0.192157, 1 )
corner_radius_top_left = 20
corner_radius_bottom_left = 20
corner_detail = 2
expand_margin_left = 120.0
expand_margin_right = 30.0
expand_margin_top = 6.0
expand_margin_bottom = 6.0
shadow_color = Color( 0, 0, 0, 0.215686 )
shadow_size = 6

[sub_resource type="Animation" id=10]
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath("Fish:rect_scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3, 0.5 ),
"transitions": PoolRealArray( 0.5, 1, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 1.8, 1.8 ), Vector2( 1, 1 ) ]
}

[sub_resource type="Animation" id=11]
resource_name = "AddYarn"
length = 0.4
tracks/0/type = "value"
tracks/0/path = NodePath("Yarn:rect_scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.4 ),
"transitions": PoolRealArray( 0.5, 1, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 1.4, 1.4 ), Vector2( 1, 1 ) ]
}

[sub_resource type="Animation" id=12]
resource_name = "Enter"
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath("../..:rect_position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.4, 0.5 ),
"transitions": PoolRealArray( 0.5, 1, 1 ),
"update": 0,
"values": [ Vector2( 1200, 270 ), Vector2( 780, 270 ), Vector2( 800, 270 ) ]
}

[sub_resource type="Animation" id=13]
tracks/0/type = "value"
tracks/0/path = NodePath("MeterPanel:rect_position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.4, 0.6 ),
"transitions": PoolRealArray( 1, 2, 1 ),
"update": 0,
"values": [ Vector2( -190, 10 ), Vector2( 0, 10 ), Vector2( -10, 10 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("CoinPanel:rect_position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.3, 0.6, 0.8 ),
"transitions": PoolRealArray( 0.5, 0.5, 2, 1 ),
"update": 0,
"values": [ Vector2( 1200, 10 ), Vector2( 1200, 10 ), Vector2( 790, 10 ), Vector2( 798, 10 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("FishPanel:rect_position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.5, 0.8, 1 ),
"transitions": PoolRealArray( 1, 0.5, 2, 1 ),
"update": 0,
"values": [ Vector2( 1200, 140 ), Vector2( 1200, 140 ), Vector2( 780, 140 ), Vector2( 798, 140 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("../FuelBar:rect_position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.3, 0.7, 0.8 ),
"transitions": PoolRealArray( 1, 0.5, 1, 1 ),
"update": 0,
"values": [ Vector2( -150, 700 ), Vector2( -150, 700 ), Vector2( 20, 700 ), Vector2( 10, 700 ) ]
}

[sub_resource type="Animation" id=14]
length = 3.5
tracks/0/type = "value"
tracks/0/path = NodePath(".:text")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5, 1.5, 2.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ "3", "3", "2", "1" ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:rect_scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1, 1.4, 1.5, 2, 2.4, 2.5, 3, 3.4, 3.5 ),
"transitions": PoolRealArray( 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5 ),
"update": 0,
"values": [ Vector2( 0.2, 0.2 ), Vector2( 2, 2 ), Vector2( 2, 2 ), Vector2( 0.2, 0.2 ), Vector2( 2, 2 ), Vector2( 2, 2 ), Vector2( 0.2, 0.2 ), Vector2( 2, 2 ), Vector2( 2, 2 ), Vector2( 0.2, 0.2 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:self_modulate")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.5, 1, 1.5, 2, 2.5, 3, 3.4, 3.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:visible")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 3.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}

[sub_resource type="Animation" id=15]
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath("LPaw:self_modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0.67451 ), Color( 1, 1, 1, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("RPaw:self_modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0.67451 ), Color( 1, 1, 1, 0 ) ]
}

[sub_resource type="Animation" id=16]
length = 0.7
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("LPaw:rotation_degrees")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.4 ),
"transitions": PoolRealArray( 0.5, 0.5 ),
"update": 0,
"values": [ 0.0, 30.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("RPaw:rotation_degrees")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.4 ),
"transitions": PoolRealArray( 0.5, 0.5 ),
"update": 0,
"values": [ -30.0, 0.0 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("RPaw:scale")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.4 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 3.625, 3.625 ), Vector2( 3.2, 3.2 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("LPaw:scale")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.4 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 3.625, 3.625 ), Vector2( 3.2, 3.2 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("RPaw:frame")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 0.1, 0.6 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ 1, 0, 0 ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("LPaw:frame")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0, 0.3, 0.6 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 0 ]
}

[sub_resource type="Animation" id=17]
length = 1.6
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:rotation_degrees")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.8 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ -59.9999, -720.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sprite:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.8, 1.6 ),
"transitions": PoolRealArray( 2, 0.5, 1 ),
"update": 0,
"values": [ Vector2( 3.81007, 3.81007 ), Vector2( 31.1765, 31.1765 ), Vector2( 0.1, 0.1 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:self_modulate")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.8 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 0 ), Color( 0, 0, 0, 1 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Sprite:visible")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 1.6 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}

[node name="GameScene" type="Node"]
script = SubResource( 1 )

[node name="House" type="Node2D" parent="."]
script = SubResource( 2 )
house_broken = ExtResource( 1 )

[node name="House" type="Sprite" parent="House"]
position = Vector2( 541.563, 143.5 )
scale = Vector2( 2.23267, 2.39453 )
texture = ExtResource( 2 )

[node name="StaticBody2D" type="StaticBody2D" parent="House"]
position = Vector2( 542.192, 239.93 )
scale = Vector2( 12, 12 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="House/StaticBody2D"]
shape = SubResource( 3 )

[node name="CPUParticles2D" type="CPUParticles2D" parent="House"]
show_behind_parent = true
position = Vector2( 1067, -180 )
rotation = -1.4071
scale = Vector2( 12, 12 )
amount = 25
lifetime = 2.5
texture = ExtResource( 3 )
emission_shape = 1
emission_sphere_radius = 2.0
spread = 35.0
gravity = Vector2( 0, 0 )
initial_velocity = 20.0
initial_velocity_random = 0.2
angular_velocity = 150.0
angular_velocity_random = 1.0
tangential_accel = 0.5
tangential_accel_random = 1.0
angle = 360.0
angle_random = 1.0
scale_amount = 0.3
scale_amount_random = 0.4
color_ramp = SubResource( 4 )

[node name="VisibilityNotifier2D" type="VisibilityNotifier2D" parent="House"]
position = Vector2( 539.258, -643.115 )

[node name="CatShadow" type="Sprite" parent="House"]
modulate = Color( 0, 0, 0, 0.27451 )
position = Vector2( 542, 88 )
rotation = 3.14159
scale = Vector2( 0.3, 0.1 )
texture = ExtResource( 4 )

[node name="ParallaxBackground" type="ParallaxBackground" parent="."]
script = SubResource( 5 )
space_height = 3000
color_list = [ Color( 0.227451, 0.415686, 0.815686, 1 ), Color( 0.223529, 0.4, 0.772549, 1 ), Color( 0.14902, 0.262745, 0.509804, 1 ), Color( 0.0862745, 0.156863, 0.305882, 1 ), Color( 0.105882, 0.137255, 0.215686, 1 ) ]

[node name="ParallaxLayer" type="ParallaxLayer" parent="ParallaxBackground"]
motion_mirroring = Vector2( 1080, 1920 )

[node name="Bg1" type="Sprite" parent="ParallaxBackground/ParallaxLayer"]
self_modulate = Color( 0.227451, 0.415686, 0.815686, 1 )
texture = ExtResource( 5 )
centered = false

[node name="ParallaxLayer2" type="ParallaxLayer" parent="ParallaxBackground"]
motion_scale = Vector2( 1, 0.05 )
motion_mirroring = Vector2( 0, 1920 )

[node name="Cloud1" type="Sprite" parent="ParallaxBackground/ParallaxLayer2"]
self_modulate = Color( 1, 1, 1, 0.533333 )
texture = ExtResource( 8 )
centered = false

[node name="Star1" type="Sprite" parent="ParallaxBackground/ParallaxLayer2"]
modulate = Color( 1, 1, 1, 0 )
texture = ExtResource( 7 )
centered = false

[node name="ParallaxLayer3" type="ParallaxLayer" parent="ParallaxBackground"]
motion_scale = Vector2( 1, 0.1 )
motion_mirroring = Vector2( 0, 1920 )

[node name="Cloud2" type="Sprite" parent="ParallaxBackground/ParallaxLayer3"]
self_modulate = Color( 1, 1, 1, 0.533333 )
texture = ExtResource( 6 )
centered = false

[node name="Star2" type="Sprite" parent="ParallaxBackground/ParallaxLayer3"]
self_modulate = Color( 1, 1, 1, 0 )
texture = ExtResource( 9 )
centered = false

[node name="Tween" type="Tween" parent="ParallaxBackground"]

[node name="Player" parent="." instance=ExtResource( 10 )]
position = Vector2( 540, 828.5 )

[node name="UIGame" type="CanvasLayer" parent="."]
script = SubResource( 6 )
height_tutorial = 15

[node name="UI" type="Control" parent="UIGame"]
pause_mode = 2
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="UpperPanel" type="Control" parent="UIGame/UI"]
anchor_right = 1.0
margin_bottom = 284.0
mouse_filter = 2
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="MeterPanel" type="Control" parent="UIGame/UI/UpperPanel"]
margin_left = -190.0
margin_top = 10.0
margin_right = 190.0
margin_bottom = 150.0
mouse_filter = 2
size_flags_horizontal = 3
size_flags_vertical = 3
__meta__ = {
"_edit_lock_": true
}

[node name="MeterLabel" type="Label" parent="UIGame/UI/UpperPanel/MeterPanel"]
anchor_top = 0.5
anchor_bottom = 0.5
margin_left = 20.0
margin_top = -67.0
margin_right = 70.0
margin_bottom = 59.0
size_flags_horizontal = 3
size_flags_vertical = 3
custom_fonts/font = ExtResource( 42 )
custom_colors/font_color = Color( 1, 1, 1, 1 )
custom_colors/font_color_shadow = Color( 0, 0, 0, 0.25098 )
custom_constants/shadow_offset_x = 4
custom_constants/shadow_offset_y = 4
text = "0"

[node name="MLabel" type="Label" parent="UIGame/UI/UpperPanel/MeterPanel/MeterLabel"]
self_modulate = Color( 1, 0.843137, 0, 1 )
anchor_left = 1.0
anchor_top = 0.5
anchor_right = 1.0
anchor_bottom = 0.5
margin_left = 13.0
margin_top = -63.0
margin_right = 73.0
margin_bottom = 57.0
size_flags_horizontal = 3
size_flags_vertical = 3
custom_fonts/font = ExtResource( 42 )
custom_colors/font_color = Color( 1, 1, 1, 1 )
custom_colors/font_color_shadow = Color( 0, 0, 0, 0.25098 )
custom_constants/shadow_offset_x = 4
custom_constants/shadow_offset_y = 4
text = "M"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="MeterPanel" type="Panel" parent="UIGame/UI/UpperPanel/MeterPanel/MeterLabel"]
show_behind_parent = true
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 0
grow_vertical = 0
custom_styles/panel = SubResource( 7 )

[node name="CoinPanel" type="Control" parent="UIGame/UI/UpperPanel"]
show_behind_parent = true
anchor_left = 1.0
anchor_right = 1.0
margin_left = 120.0
margin_top = 10.0
margin_right = 402.0
margin_bottom = 110.0
mouse_filter = 2
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="CoinLabel" type="Label" parent="UIGame/UI/UpperPanel/CoinPanel"]
anchor_left = 1.0
anchor_top = 0.5
anchor_right = 1.0
anchor_bottom = 0.5
margin_left = -50.0
margin_top = -44.0
margin_right = -11.0
margin_bottom = 60.0
grow_horizontal = 0
grow_vertical = 0
custom_fonts/font = ExtResource( 44 )
custom_colors/font_color = Color( 1, 1, 1, 1 )
custom_colors/font_color_shadow = Color( 0, 0, 0, 0.25098 )
custom_constants/shadow_offset_x = 6
custom_constants/shadow_offset_y = 6
text = "9"
align = 2

[node name="CoinControl" type="Control" parent="UIGame/UI/UpperPanel/CoinPanel/CoinLabel"]
anchor_top = 0.5
anchor_bottom = 0.5
margin_left = -70.0
margin_top = -20.0
margin_right = -30.0
margin_bottom = 20.0

[node name="Coin" type="TextureRect" parent="UIGame/UI/UpperPanel/CoinPanel/CoinLabel/CoinControl"]
anchor_top = 0.5
anchor_bottom = 0.5
margin_left = -28.0
margin_top = -47.0
margin_right = 63.0
margin_bottom = 44.0
grow_horizontal = 2
grow_vertical = 2
rect_min_size = Vector2( 76, 76 )
rect_pivot_offset = Vector2( 46.5341, 48.5427 )
texture = ExtResource( 13 )
expand = true
stretch_mode = 6
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Anim" type="AnimationPlayer" parent="UIGame/UI/UpperPanel/CoinPanel/CoinLabel/CoinControl"]
anims/AddCoin = SubResource( 8 )

[node name="CoinPanel" type="Panel" parent="UIGame/UI/UpperPanel/CoinPanel/CoinLabel"]
show_behind_parent = true
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 0
grow_vertical = 0
custom_styles/panel = SubResource( 9 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="FishPanel" type="Control" parent="UIGame/UI/UpperPanel"]
anchor_left = 1.0
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 120.0
margin_top = -144.0
margin_right = 402.001
margin_bottom = -44.0
mouse_filter = 2
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="FishLabel" type="Label" parent="UIGame/UI/UpperPanel/FishPanel"]
anchor_left = 1.0
anchor_top = 0.5
anchor_right = 1.0
anchor_bottom = 0.5
margin_left = -50.001
margin_top = -49.0
margin_right = -10.001
margin_bottom = 51.0
grow_horizontal = 0
size_flags_vertical = 1
custom_fonts/font = ExtResource( 44 )
custom_colors/font_color = Color( 1, 1, 1, 1 )
custom_colors/font_color_shadow = Color( 0, 0, 0, 0.25098 )
custom_constants/shadow_offset_x = 6
custom_constants/shadow_offset_y = 6
text = "9"
align = 2
valign = 1

[node name="FishControl" type="Control" parent="UIGame/UI/UpperPanel/FishPanel/FishLabel"]
anchor_top = 0.5
anchor_bottom = 0.5
margin_left = -70.0
margin_top = -20.0
margin_right = -30.0
margin_bottom = 20.0

[node name="Fish" type="TextureRect" parent="UIGame/UI/UpperPanel/FishPanel/FishLabel/FishControl"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -58.7526
margin_top = -57.0
margin_right = 54.2474
margin_bottom = 56.0
grow_horizontal = 2
grow_vertical = 2
rect_min_size = Vector2( 96, 96 )
rect_pivot_offset = Vector2( 48, 48 )
texture = ExtResource( 14 )
expand = true
stretch_mode = 6

[node name="Anim" type="AnimationPlayer" parent="UIGame/UI/UpperPanel/FishPanel/FishLabel/FishControl"]
anims/AddFish = SubResource( 10 )

[node name="FishPanel" type="Panel" parent="UIGame/UI/UpperPanel/FishPanel/FishLabel"]
show_behind_parent = true
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 0
grow_vertical = 0
custom_styles/panel = SubResource( 9 )

[node name="YarnPanel" type="Control" parent="UIGame/UI/UpperPanel"]
anchor_left = 1.0
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 120.0
margin_top = -14.0
margin_right = 401.999
margin_bottom = 86.0
mouse_filter = 2
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="YarnLabel" type="Label" parent="UIGame/UI/UpperPanel/YarnPanel"]
anchor_left = 1.0
anchor_top = 0.5
anchor_right = 1.0
anchor_bottom = 0.5
margin_left = -50.001
margin_top = -49.0
margin_right = -10.001
margin_bottom = 51.0
grow_horizontal = 0
size_flags_vertical = 1
custom_fonts/font = ExtResource( 44 )
custom_colors/font_color = Color( 1, 1, 1, 1 )
custom_colors/font_color_shadow = Color( 0, 0, 0, 0.25098 )
custom_constants/shadow_offset_x = 6
custom_constants/shadow_offset_y = 6
text = "9"
align = 2
valign = 1

[node name="YarnControl" type="Control" parent="UIGame/UI/UpperPanel/YarnPanel/YarnLabel"]
anchor_top = 0.5
anchor_bottom = 0.5
margin_left = -70.0
margin_top = -20.0
margin_right = -30.0
margin_bottom = 20.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Yarn" type="TextureRect" parent="UIGame/UI/UpperPanel/YarnPanel/YarnLabel/YarnControl"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -49.0
margin_top = -45.5
margin_right = 41.0
margin_bottom = 44.5
grow_horizontal = 2
grow_vertical = 2
rect_min_size = Vector2( 90, 90 )
rect_pivot_offset = Vector2( 48, 48 )
texture = ExtResource( 48 )
expand = true
stretch_mode = 6
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Anim" type="AnimationPlayer" parent="UIGame/UI/UpperPanel/YarnPanel/YarnLabel/YarnControl"]
anims/AddYarn = SubResource( 11 )
anims/Enter = SubResource( 12 )

[node name="FishPanel" type="Panel" parent="UIGame/UI/UpperPanel/YarnPanel/YarnLabel"]
show_behind_parent = true
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 0
grow_vertical = 0
custom_styles/panel = SubResource( 9 )

[node name="TimedBanners" type="Control" parent="UIGame/UI/UpperPanel"]
margin_right = 200.0
margin_bottom = 308.0
rect_min_size = Vector2( 200, 0 )
mouse_filter = 2
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="VBC" type="VBoxContainer" parent="UIGame/UI/UpperPanel/TimedBanners"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_top = 157.0
margin_bottom = 169.0
rect_min_size = Vector2( 200, 320 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CoinBanner" parent="UIGame/UI/UpperPanel/TimedBanners/VBC" instance=ExtResource( 43 )]
anchor_right = 0.0
anchor_bottom = 0.0
margin_right = 200.0
margin_bottom = 104.0
icon_texture = ExtResource( 45 )

[node name="MagnetBanner" parent="UIGame/UI/UpperPanel/TimedBanners/VBC" instance=ExtResource( 43 )]
anchor_right = 0.0
anchor_bottom = 0.0
margin_top = 108.0
margin_right = 200.0
margin_bottom = 212.0
icon_texture = ExtResource( 12 )

[node name="AegisBanner" parent="UIGame/UI/UpperPanel/TimedBanners/VBC" instance=ExtResource( 43 )]
anchor_right = 0.0
anchor_bottom = 0.0
margin_top = 216.0
margin_right = 200.0
margin_bottom = 320.0
icon_texture = ExtResource( 19 )

[node name="Anim" type="AnimationPlayer" parent="UIGame/UI/UpperPanel"]
anims/StartRound = SubResource( 13 )

[node name="FuelBar" parent="UIGame/UI" instance=ExtResource( 17 )]
margin_left = -150.0
margin_right = -1130.0
mouse_filter = 2

[node name="PauseButton" type="TextureButton" parent="UIGame/UI"]
pause_mode = 2
anchor_left = 1.0
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -150.0
margin_top = -150.0
margin_right = -29.0
margin_bottom = -32.0
texture_normal = ExtResource( 15 )
texture_pressed = ExtResource( 16 )
texture_hover = ExtResource( 16 )
texture_disabled = ExtResource( 16 )
texture_focused = ExtResource( 16 )
expand = true
stretch_mode = 5
__meta__ = {
"_edit_use_anchors_": false
}

[node name="PausePanel" parent="UIGame/UI" instance=ExtResource( 18 )]

[node name="PauseTimer" type="Label" parent="UIGame/UI"]
pause_mode = 2
self_modulate = Color( 1, 1, 1, 0 )
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -50.0
margin_top = -100.0
margin_right = 50.0
margin_bottom = 101.0
rect_scale = Vector2( 0.2, 0.2 )
rect_pivot_offset = Vector2( 52.192, 100.5 )
custom_fonts/font = ExtResource( 49 )
text = "3"
align = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Anim" type="AnimationPlayer" parent="UIGame/UI/PauseTimer"]
anims/Countdown = SubResource( 14 )

[node name="ConfigPanel" parent="UIGame/UI" instance=ExtResource( 24 )]

[node name="DeadPanel" parent="UIGame/UI" instance=ExtResource( 25 )]
margin_top = 1.0
margin_bottom = 1.0

[node name="RecoverPanel" parent="UIGame/UI" instance=ExtResource( 22 )]

[node name="ComboButton" type="TextureButton" parent="UIGame/UI"]
visible = false
margin_left = 10.0
margin_top = 1797.0
margin_right = 160.0
margin_bottom = 1906.0

[node name="Tutorial" type="Control" parent="UIGame/UI"]
visible = false
margin_right = 40.0
margin_bottom = 40.0
mouse_filter = 2
__meta__ = {
"_edit_lock_": true
}

[node name="InitialTap" type="Control" parent="UIGame/UI/Tutorial"]
margin_right = 40.0
margin_bottom = 40.0
mouse_filter = 2

[node name="Anim" type="AnimationPlayer" parent="UIGame/UI/Tutorial/InitialTap"]
autoplay = "Start"
anims/End = SubResource( 15 )
anims/Start = SubResource( 16 )

[node name="LPaw" type="Sprite" parent="UIGame/UI/Tutorial/InitialTap"]
self_modulate = Color( 1, 1, 1, 0.67451 )
position = Vector2( 186, 1650 )
scale = Vector2( 3.625, 3.625 )
texture = ExtResource( 26 )
offset = Vector2( 0, -24.1379 )
hframes = 2

[node name="RPaw" type="Sprite" parent="UIGame/UI/Tutorial/InitialTap"]
self_modulate = Color( 1, 1, 1, 0.67451 )
position = Vector2( 872, 1650 )
rotation = -0.523599
scale = Vector2( 3.625, 3.625 )
texture = ExtResource( 26 )
offset = Vector2( 2.75862, -24.1379 )
hframes = 2
frame = 1

[node name="InitialDarker" parent="UIGame/UI" instance=ExtResource( 27 )]

[node name="TransitionScene" parent="UIGame/UI" instance=ExtResource( 28 )]

[node name="RestartTransition" type="TextureRect" parent="UIGame/UI"]
visible = false
self_modulate = Color( 0, 0, 0, 0 )
margin_right = 1080.0
margin_bottom = 1920.0
mouse_filter = 2
texture = ExtResource( 5 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="RestAnim" type="AnimationPlayer" parent="UIGame/UI/RestartTransition"]
anims/Start = SubResource( 17 )

[node name="Sprite" type="Sprite" parent="UIGame/UI/RestartTransition"]
position = Vector2( 530, 950 )
rotation = -1.0472
scale = Vector2( 3.81007, 3.81007 )
texture = ExtResource( 29 )

[node name="SpawnPoints" type="Node2D" parent="."]

[node name="Enemies" type="Node2D" parent="SpawnPoints"]

[node name="Position2D11" type="Position2D" parent="SpawnPoints/Enemies"]
position = Vector2( 550, -340 )

[node name="Position2D12" type="Position2D" parent="SpawnPoints/Enemies"]
position = Vector2( 302, -340 )

[node name="Position2D13" type="Position2D" parent="SpawnPoints/Enemies"]
position = Vector2( 800, -340 )

[node name="Currency" type="Node2D" parent="SpawnPoints"]
position = Vector2( 0, 1 )

[node name="Position2D11" type="Position2D" parent="SpawnPoints/Currency"]
position = Vector2( 549.258, -430 )

[node name="Position2D14" type="Position2D" parent="SpawnPoints/Currency"]
position = Vector2( 894, -412.253 )

[node name="Position2D15" type="Position2D" parent="SpawnPoints/Currency"]
position = Vector2( 239, -412.253 )

[node name="PowerUps" type="Node2D" parent="SpawnPoints"]

[node name="Position2D11" type="Position2D" parent="SpawnPoints/PowerUps"]
position = Vector2( 551.298, -221.982 )

[node name="Position2D12" type="Position2D" parent="SpawnPoints/PowerUps"]
position = Vector2( 371.298, -221.982 )

[node name="Position2D13" type="Position2D" parent="SpawnPoints/PowerUps"]
position = Vector2( 711.298, -221.982 )

[node name="Position2D14" type="Position2D" parent="SpawnPoints/PowerUps"]
position = Vector2( 863.298, -221.982 )

[node name="Position2D15" type="Position2D" parent="SpawnPoints/PowerUps"]
position = Vector2( 214, -221.982 )

[node name="CurrencyPool" type="Node2D" parent="."]
script = ExtResource( 23 )
objects_scene_list = [ ExtResource( 30 ), ExtResource( 31 ), ExtResource( 47 ) ]
objects_number = 8

[node name="PowerUpPool" type="Node2D" parent="."]
script = ExtResource( 23 )
objects_scene_list = [ ExtResource( 32 ), ExtResource( 33 ), ExtResource( 34 ), ExtResource( 46 ) ]
objects_number = 3

[node name="EnemyPool" type="Node2D" parent="."]
script = ExtResource( 23 )
objects_scene_list = [ ExtResource( 35 ), ExtResource( 36 ), ExtResource( 37 ), ExtResource( 38 ), ExtResource( 20 ), ExtResource( 21 ) ]
objects_number = 5

[node name="CurrencySpawner" parent="." instance=ExtResource( 40 )]
item_list = [ "Fish", "Yarnball", "CoinCluster" ]
spawn_points_node = NodePath("../SpawnPoints/Currency")
pool_manager = NodePath("../CurrencyPool")
min_height = 10.0
max_height = 14.0
min_height_tutorial = 0
item_probability = [ 0.1, 0.25, 1.0 ]
decrease_on_invencible = 6

[node name="PowerUpSpawner" parent="." instance=ExtResource( 41 )]
item_list = [ "AegisWings", "Magnet", "CoinMultiplier", "FuelCan" ]
spawn_points_node = NodePath("../SpawnPoints/PowerUps")
pool_manager = NodePath("../PowerUpPool")
min_height = 18.0
max_height = 20.0
spawn_type = 0
min_height_tutorial = 0
item_probability = [ 0.015, 0.1, 0.3, 1.0 ]

[node name="EnemySpawner" parent="." instance=ExtResource( 39 )]
spawn_points_node = NodePath("../SpawnPoints/Enemies")
pool_manager = NodePath("../EnemyPool")
min_height_tutorial = 15
items_max_height = [ 800, 1400, 1800, 2200, 3000, 9999999 ]
[connection signal="on_aegis" from="." to="UIGame" method="_on_GameScene_on_aegis"]
[connection signal="on_aegis" from="." to="Player" method="_on_GameScene_on_aegis"]
[connection signal="on_coin_multiplier" from="." to="UIGame" method="_on_GameScene_on_coin_multiplier"]
[connection signal="on_fuel_completed" from="." to="UIGame" method="_on_GameScene_on_fuel_completed"]
[connection signal="on_fuel_completed" from="." to="Player" method="_on_GameScene_on_fuel_completed"]
[connection signal="on_magnet" from="." to="UIGame" method="_on_GameScene_on_magnet"]
[connection signal="on_magnet" from="." to="Player" method="_on_GameScene_on_magnet"]
[connection signal="on_yarn_taken" from="." to="UIGame" method="_on_GameScene_on_yarn_taken"]
[connection signal="screen_exited" from="House/VisibilityNotifier2D" to="House" method="_on_VisibilityNotifier2D_screen_exited"]
[connection signal="current_height" from="Player" to="." method="_on_Player_current_height"]
[connection signal="current_height" from="Player" to="UIGame" method="_on_Player_current_height"]
[connection signal="current_height" from="Player" to="ParallaxBackground" method="_on_Player_current_height"]
[connection signal="dead" from="Player" to="." method="_on_Player_dead"]
[connection signal="show_dead_ui" from="Player" to="UIGame" method="_on_Player_show_dead_ui"]
[connection signal="start_playing" from="Player" to="." method="_on_Player_start_playing"]
[connection signal="on_aegis_timeout" from="UIGame" to="." method="_on_UIGame_on_aegis_timeout"]
[connection signal="on_magnet_timeout" from="UIGame" to="." method="_on_UIGame_on_magnet_timeout"]
[connection signal="on_multiplier_timeout" from="UIGame" to="." method="_on_UIGame_on_multiplier_timeout"]
[connection signal="button_down" from="UIGame/UI/PauseButton" to="UIGame" method="_on_PauseButton_button_down"]
[connection signal="button_down" from="UIGame/UI/PauseButton" to="UIGame/UI/PausePanel" method="_on_PauseButton_button_down"]
[connection signal="on_config" from="UIGame/UI/PausePanel" to="UIGame" method="_on_PausePanel_on_config"]
[connection signal="on_continue" from="UIGame/UI/PausePanel" to="UIGame" method="_on_PausePanel_on_continue"]
[connection signal="on_home" from="UIGame/UI/PausePanel" to="UIGame" method="_on_PausePanel_on_home"]
[connection signal="animation_finished" from="UIGame/UI/PauseTimer/Anim" to="." method="_on_Anim_animation_finished"]
[connection signal="duplicate_currency" from="UIGame/UI/DeadPanel" to="." method="_on_DeadPanel_duplicate_currency"]
[connection signal="restart_game" from="UIGame/UI/DeadPanel" to="." method="_on_DeadPanel_restart_game"]
[connection signal="accept_recover" from="UIGame/UI/RecoverPanel" to="." method="_on_RecoverPanel_accept_recover"]
[connection signal="accept_recover" from="UIGame/UI/RecoverPanel" to="UIGame" method="_on_RecoverPanel_accept_recover"]
[connection signal="cancel_recover" from="UIGame/UI/RecoverPanel" to="UIGame" method="_on_RecoverPanel_cancel_recover"]
[connection signal="button_down" from="UIGame/UI/ComboButton" to="." method="_on_ComboButton_button_down"]
[connection signal="finished" from="UIGame/UI/TransitionScene" to="UIGame" method="_on_TransitionScene_finished"]
[connection signal="animation_finished" from="UIGame/UI/TransitionScene/Anim" to="UIGame" method="_on_Anim_animation_finished"]
[connection signal="animation_finished" from="UIGame/UI/RestartTransition/RestAnim" to="." method="_on_RestAnim_animation_finished"]

[editable path="UIGame/UI/ConfigPanel"]

[editable path="UIGame/UI/TransitionScene"]
