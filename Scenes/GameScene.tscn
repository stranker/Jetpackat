[gd_scene load_steps=61 format=2]

[ext_resource path="res://Sprites/Background/House.png" type="Texture" id=1]
[ext_resource path="res://Sprites/Background/SmokeParticle.png" type="Texture" id=2]
[ext_resource path="res://Sprites/Background/Bg1.png" type="Texture" id=3]
[ext_resource path="res://Sprites/Background/Bg2.png" type="Texture" id=4]
[ext_resource path="res://Sprites/Background/Star2.png" type="Texture" id=5]
[ext_resource path="res://Sprites/Background/Bg3.png" type="Texture" id=6]
[ext_resource path="res://Sprites/Background/Star3.png" type="Texture" id=7]
[ext_resource path="res://Object/Player.tscn" type="PackedScene" id=8]
[ext_resource path="res://Shaders/outline.shader" type="Shader" id=9]
[ext_resource path="res://Sprites/Collectables/Fish.png" type="Texture" id=10]
[ext_resource path="res://Fonts/overload burn.ttf" type="DynamicFontData" id=11]
[ext_resource path="res://Sprites/Collectables/Coin.png" type="Texture" id=12]
[ext_resource path="res://Sprites/UI/PauseButton.png" type="Texture" id=13]
[ext_resource path="res://Sprites/UI/PauseButtonPressed.png" type="Texture" id=14]
[ext_resource path="res://Sprites/UI/PausePanel.png" type="Texture" id=15]
[ext_resource path="res://Fonts/overload.ttf" type="DynamicFontData" id=16]
[ext_resource path="res://Sprites/UI/ContinueButton.png" type="Texture" id=17]
[ext_resource path="res://Sprites/UI/ContinueButtonPressed.png" type="Texture" id=18]
[ext_resource path="res://Sprites/UI/CloseButton.png" type="Texture" id=19]
[ext_resource path="res://Sprites/UI/CloseButtonPressed.png" type="Texture" id=20]
[ext_resource path="res://Sprites/UI/HomeButton.png" type="Texture" id=21]
[ext_resource path="res://Sprites/UI/HomeButtonPressed.png" type="Texture" id=22]
[ext_resource path="res://Sprites/UI/ConfigButton.png" type="Texture" id=23]
[ext_resource path="res://Sprites/UI/ConfigButtonPressed.png" type="Texture" id=24]
[ext_resource path="res://Scenes/ConfigPanel.tscn" type="PackedScene" id=25]
[ext_resource path="res://Sprites/Cat/CatHead.png" type="Texture" id=26]
[ext_resource path="res://Object/Misc/CollectableSpawner.tscn" type="PackedScene" id=27]
[ext_resource path="res://Object/Collectable/Fish.tscn" type="PackedScene" id=28]
[ext_resource path="res://Object/Collectable/CoinCluster.tscn" type="PackedScene" id=29]
[ext_resource path="res://Object/Misc/EnemySpawner.tscn" type="PackedScene" id=30]
[ext_resource path="res://Object/Enemies/PaperPlane.tscn" type="PackedScene" id=31]
[ext_resource path="res://Object/Enemies/Bird.tscn" type="PackedScene" id=32]
[ext_resource path="res://Object/Enemies/Ovni.tscn" type="PackedScene" id=33]
[ext_resource path="res://Object/Misc/OrbitSpawner.tscn" type="PackedScene" id=34]
[ext_resource path="res://Object/Ribbon/Ribbon.tscn" type="PackedScene" id=35]

[sub_resource type="GDScript" id=1]
script/source = "extends Node

var playing : bool = false
export var game_timer : float = 70
export var coins : int = 0
export var fishes : int = 0
var player_height : int = 0
var end_play : bool = false
var coin_increment = 0
var highscore_passed : bool = false

func _ready():
	coins = GameManager.coins
	fishes = GameManager.fishes
	update_time_label()
	update_coin_label()
	update_fish_label()
	update_meter_label()
	pass

func _process(delta):
	if playing:
		update_time(delta)
		update_time_label()
	pass


func int_to_time(number):
	var time_number : String = ''
	var second_to_minutes = number / 60.0
	var minute = floor(second_to_minutes)
	var seconds = floor((second_to_minutes - minute) * 60.0)
	if seconds <= 0.01:
		seconds = 0
	if minute > 0:
		time_number = str(minute) + ':' + str(seconds).pad_zeros(2)
	else:
		time_number = str(seconds)
	return time_number

func update_time_label():
	$UIGame.update_time_label(int_to_time(game_timer))
	pass

func update_coin_label():
	$UIGame.update_coin_label(coins)

func update_fish_label():
	$UIGame.update_fishes_label(fishes)

func update_time(delta):
	if game_timer > 0:
		game_timer -= delta
	else:
		game_timer = 0
		end_game_time()

func start_game():
	playing = !playing
	GameManager.playing = playing
	pass

func add_game_time(val):
	game_timer += val
	$UIGame.add_time(val)
	pass

func add_fish(val):
	fishes += val
	update_fish_label()
	$UIGame.add_fish(val)
	pass

func add_coin(val):
	coins += val
	coin_increment += val
	$CoinTimer.start()
	$UIGame.add_coin(coin_increment)
	update_coin_label()
	pass

func update_height(val):
	if val > player_height:
		player_height = val
		GameManager.player_height = player_height
		update_meter_label()

func update_meter_label():
	$UIGame.update_meters_label(player_height)
	pass

func end_game():
	GameManager.coins = coins
	GameManager.fishes = fishes
	GameManager.player_height = 0
	if GameManager.highscore < player_height:
		GameManager.highscore = player_height
		highscore_passed = true
	playing = !playing
	$UIGame.show_deadpanel()
	GameManager.save_game_data()
	pass

func end_game_time():
	$Player.time_out()
	pass

func restart_game():
	GameManager.save_game_data()
	get_tree().reload_current_scene()
	pass

func _on_RestartButton_button_down():
	$UIGame/Container/DeadPanel/CloseButton.disabled = true
	$UIGame/Container/Transition/Anim.play('Restart')
	pass # Replace with function body.

func _on_CloseButton_button_down():
	end_play = !end_play
	$UIGame.exit_play()
	pass # Replace with function body

func _on_CoinTimer_timeout():
	coin_increment = 0
	pass # Replace with function body.

func _on_Currency_button_down():
	GameManager.coins = 99999
	GameManager.fishes = 99999
	coins = GameManager.coins
	fishes = GameManager.fishes
	update_coin_label()
	update_fish_label()
	GameManager.save_game_data()
	pass # Replace with function body.


func _on_Button_button_down():
	$UIGame/DebugPanel.hide()
	pass # Replace with function body.


func _on_DebugButton_button_down():
	$UIGame/DebugPanel.show()
	pass # Replace with function body.


func _on_ResetGame_button_down():
	GameManager.reset_game_state()
	pass # Replace with function body."

[sub_resource type="GDScript" id=2]
script/source = "extends Node2D

func _on_VisibilityNotifier2D_screen_exited():
	$CPUParticles2D.emitting = false
	pass # Replace with function body.
"

[sub_resource type="RectangleShape2D" id=3]
extents = Vector2( 51.2298, 12.5829 )

[sub_resource type="Gradient" id=4]
colors = PoolColorArray( 0.730469, 0.730469, 0.730469, 1, 0, 0, 0, 0 )

[sub_resource type="GDScript" id=5]
script/source = "extends ParallaxBackground

export var space_height = 500
var on_space : bool = false

func _process(delta):
	if GameManager.player_height > space_height and !on_space:
		change_to_space()
	if !on_space and GameManager.player_height > 50:
		set_background_darker()
	pass

func set_background_darker():
	if GameManager.player_height % 50 == 0 and !$Tween.is_active():
		$Tween.stop_all()
		var actual_color = $ParallaxLayer/Bg1.self_modulate
		var new_color : Color = Color(actual_color.r - 0.1,actual_color.g - 0.1,actual_color.b - 0.1)
		$Tween.interpolate_property($ParallaxLayer/Bg1,'self_modulate',$ParallaxLayer/Bg1.self_modulate, new_color, 2, Tween.TRANS_LINEAR,Tween.EASE_IN)
		$Tween.start()
	pass

func change_to_space():
	on_space = !on_space
	$Tween.stop_all()
	$Tween.interpolate_property($ParallaxLayer/Bg1,'self_modulate',$ParallaxLayer/Bg1.self_modulate, Color.black, 2, Tween.TRANS_LINEAR,Tween.EASE_IN)
	$Tween.interpolate_property($ParallaxLayer2/Cloud1, 'modulate',$ParallaxLayer2/Cloud1.modulate, Color(0,0,0,0), 2, Tween.TRANS_LINEAR,Tween.EASE_IN)
	$Tween.interpolate_property($ParallaxLayer3/Cloud2, 'modulate',$ParallaxLayer3/Cloud2.modulate, Color(0,0,0,0), 2, Tween.TRANS_LINEAR,Tween.EASE_IN)
	$Tween.interpolate_property($ParallaxLayer2/Star1, 'modulate',$ParallaxLayer2/Star1.modulate, Color(1,1,1,1), 2, Tween.TRANS_LINEAR,Tween.EASE_IN)
	$Tween.interpolate_property($ParallaxLayer3/Star2, 'modulate',$ParallaxLayer3/Star2.modulate, Color(1,1,1,1), 2, Tween.TRANS_LINEAR,Tween.EASE_IN)
	$Tween.start()
	pass"

[sub_resource type="GDScript" id=6]
script/source = "extends CanvasLayer

onready var fish_panel = $Container/Panel/HBC/FishPanel/HBC
onready var time_panel = $Container/Panel/HBC/TimePanel
onready var coin_panel = $Container/Panel/HBC/CoinPanel/HBC

func _ready():
	$Container/ConfigPanel.hide()
	$Container/PausePanel.hide()
	$Container/DeadPanel.hide()
	$Container/Transition/Anim.play('FadeOut')
	pass

func add_time(val):
	time_panel.get_node('TimeLabel/AddTimeLabel').text = '+' + str(val)
	time_panel.get_node('TimeLabel/Anim').play('AddTime')

func add_coin(val):
	coin_panel.get_node('CoinLabel/AddCoinLabel').text = str(val)
	if coin_panel.get_node('CoinLabel/Anim').is_playing():
		coin_panel.get_node('CoinLabel/Anim').stop()
	coin_panel.get_node('CoinLabel/Anim').play('AddCoin')

func add_fish(val):
	fish_panel.get_node('FishLabel/AddFishLabel').text = str(val)
	fish_panel.get_node('FishLabel/Anim').play('AddFish')

func update_time_label(time_text):
	time_panel.get_node('TimeLabel').text = time_text

func update_coin_label(coins):
	coin_panel.get_node('CoinLabel').text = str(coins)

func update_meters_label(meters):
	time_panel.get_node('MeterLabel').text = str(meters)+'m'

func update_fishes_label(fishes):
	fish_panel.get_node('FishLabel').text = str(fishes)
	pass

func _on_PauseButton_button_down():
	get_tree().paused = !get_tree().paused
	$Container/PausePanel.visible = get_tree().paused
	pass # Replace with function body.


func _on_ContinueButton_button_down():
	_on_PauseButton_button_down()
	pass # Replace with function body.


func _on_HomeButton_button_down():
	get_parent()._on_CloseButton_button_down()
	pass # Replace with function body.

func _on_ConfigButton_button_down():
	$Container/ConfigPanel.show()
	pass # Replace with function body.

func show_deadpanel():
	$Container/PauseButton.hide()
	check_highscore()
	$Container/DeadPanel.show()
	pass

func check_highscore():
	if get_parent().highscore_passed:
		$Container/DeadPanel/Highscore.text = 'NEW HIGHSCORE! \\n ' + str(GameManager.highscore) + 'm'
		$Container/DeadPanel/Anim.play('HighscorePassed')
	else:
		$Container/DeadPanel/Highscore.text = 'CURRENT HIGHSCORE \\n ' + str(GameManager.highscore) + 'm'
	pass

func exit_play():
	$Container/Transition/Anim.play_backwards('FadeOut')
	pass

func _on_Anim_animation_finished(anim_name):
	if anim_name == 'FadeOut' and get_parent().end_play:
		get_tree().change_scene('res://Scenes/MainMenu.tscn')
	pass # Replace with function body.
"

[sub_resource type="ShaderMaterial" id=7]
shader = ExtResource( 9 )
shader_param/outline_width = 0.0
shader_param/outline_color = Color( 1, 0.819608, 0, 0 )

[sub_resource type="DynamicFont" id=8]
size = 72
font_data = ExtResource( 11 )

[sub_resource type="Animation" id=9]
tracks/0/type = "value"
tracks/0/path = NodePath("AddFishLabel:rect_position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2, 1 ),
"transitions": PoolRealArray( 1, 0.5, 1 ),
"update": 0,
"values": [ Vector2( 30, 193.5 ), Vector2( 30, 193.5 ), Vector2( 30, 7 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("AddFishLabel:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.2, 0.5, 1 ),
"transitions": PoolRealArray( 1, 2, 0.5, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("../Fish:material:shader_param/outline_width")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.5, 0.7, 0.984953 ),
"transitions": PoolRealArray( 1, 1, 0.5, 1 ),
"update": 0,
"values": [ 0.0, 0.0, 5.0, 0.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("../Fish:material:shader_param/outline_color")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.5, 0.7, 1 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 0.819608, 0, 0 ), Color( 1, 0.819608, 0, 0 ), Color( 1, 0.823529, 0.0196078, 0.784314 ), Color( 1, 0.819608, 0, 0 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath(".:self_modulate")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 0.5, 0.7, 1 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 0.823529, 0.0117647, 0.811765 ), Color( 1, 1, 1, 1 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath(".:custom_fonts/font:size")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0, 0.5, 0.6, 1 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ 72, 72, 90, 72 ]
}

[sub_resource type="DynamicFont" id=10]
size = 120
font_data = ExtResource( 11 )

[sub_resource type="DynamicFont" id=11]
size = 100
use_filter = true
font_data = ExtResource( 11 )

[sub_resource type="DynamicFont" id=12]
size = 80
use_filter = true
font_data = ExtResource( 11 )

[sub_resource type="Animation" id=13]
tracks/0/type = "value"
tracks/0/path = NodePath("AddTimeLabel:rect_position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3, 1 ),
"transitions": PoolRealArray( 1, 0.5, 1 ),
"update": 0,
"values": [ Vector2( -94, 220 ), Vector2( -94, 220 ), Vector2( -94, -20 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("AddTimeLabel:self_modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.2, 0.5, 1 ),
"transitions": PoolRealArray( 1, 2.2974, 2.2974, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("AddTimeLabel:custom_fonts/font:size")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.3, 1 ),
"transitions": PoolRealArray( 1, 0.5, 1 ),
"update": 0,
"values": [ 80, 80, 50 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:custom_fonts/font:size")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.6, 0.7, 1 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ 100, 100, 110, 100 ]
}

[sub_resource type="DynamicFont" id=14]
size = 36
font_data = ExtResource( 11 )

[sub_resource type="DynamicFont" id=15]
size = 72
font_data = ExtResource( 11 )

[sub_resource type="DynamicFont" id=16]
size = 60
font_data = ExtResource( 11 )

[sub_resource type="Animation" id=17]
tracks/0/type = "value"
tracks/0/path = NodePath("AddCoinLabel:rect_position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3, 1 ),
"transitions": PoolRealArray( 1, 0.5, 1 ),
"update": 0,
"values": [ Vector2( 30, 194 ), Vector2( 30, 194 ), Vector2( 30, 7 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("AddCoinLabel:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.2, 0.5, 1 ),
"transitions": PoolRealArray( 1, 2, 0.5, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("AddCoinLabel:custom_fonts/font:size")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.3, 1 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 60, 60, 30 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("AddCoinLabel/TextureRect:rect_size")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.3, 1 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 56, 56 ), Vector2( 56, 56 ), Vector2( 26, 26 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("AddCoinLabel/TextureRect:rect_position")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 0.3, 1 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( -57, 8.5 ), Vector2( -57, 8.5 ), Vector2( -37, 8.5 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath(".:custom_fonts/font:size")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0, 0.6, 0.7, 1 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ 72, 72, 90, 72 ]
}

[sub_resource type="DynamicFont" id=24]
size = 60
outline_size = 6
outline_color = Color( 0, 0, 0, 1 )
use_mipmaps = true
use_filter = true
font_data = ExtResource( 16 )

[sub_resource type="DynamicFont" id=18]
size = 80
outline_size = 6
outline_color = Color( 1, 0.952941, 0.952941, 1 )
use_filter = true
font_data = ExtResource( 16 )

[sub_resource type="Animation" id=25]
resource_name = "HighscorePassed"
length = 2.0
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Highscore:custom_colors/font_color")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 0.772549, 0, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Highscore:rect_position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.5, 1, 1.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( -48, 31 ), Vector2( -52, 31.0001 ), Vector2( -48, 31 ), Vector2( -48, 11 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Highscore:rect_rotation")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.5, 1, 1.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.0, -15.0, 0.0, 14.3933 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Highscore:rect_scale")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.5, 1, 1.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 1.5, 1.5 ), Vector2( 1, 1 ), Vector2( 1.5, 1.5 ) ]
}

[sub_resource type="DynamicFont" id=19]
size = 80
font_data = ExtResource( 16 )

[sub_resource type="Animation" id=20]
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath(".:self_modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 1 ), Color( 0.109804, 0.0509804, 0.152941, 0 ) ]
}

[sub_resource type="Animation" id=21]
length = 1.5
tracks/0/type = "value"
tracks/0/path = NodePath(".:self_modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.9, 1.5 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 0 ), Color( 0.12549, 0.0431373, 0.152941, 1 ), Color( 0.0431373, 0.0156863, 0.0509804, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("CatHead:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.1, 0.9, 1.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("CatHead:rect_size")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.8, 1.5 ),
"transitions": PoolRealArray( 0.5, 0.5, 1 ),
"update": 0,
"values": [ Vector2( 150, 190 ), Vector2( 1100, 1393 ), Vector2( 20, 25 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("CatHead:rect_position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.8, 1.5 ),
"transitions": PoolRealArray( 0.5, 0.5, 1 ),
"update": 0,
"values": [ Vector2( 465, 865 ), Vector2( -10, 263 ), Vector2( 530, 947 ) ]
}
tracks/4/type = "method"
tracks/4/path = NodePath("../../..")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 1.5 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "restart_game"
} ]
}

[sub_resource type="DynamicFont" id=22]
size = 32
font_data = ExtResource( 16 )

[sub_resource type="DynamicFont" id=23]
size = 32
font_data = ExtResource( 16 )

[node name="GameScene" type="Node"]
script = SubResource( 1 )

[node name="House" type="Node2D" parent="."]
editor/display_folded = true
script = SubResource( 2 )

[node name="Sprite" type="Sprite" parent="House"]
position = Vector2( 540.76, 208.427 )
scale = Vector2( 12, 12 )
texture = ExtResource( 1 )

[node name="StaticBody2D" type="StaticBody2D" parent="House"]
position = Vector2( 540.76, 208.427 )
scale = Vector2( 12, 12 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="House/StaticBody2D"]
shape = SubResource( 3 )

[node name="CPUParticles2D" type="CPUParticles2D" parent="House"]
show_behind_parent = true
position = Vector2( 1115.51, -184.203 )
rotation = -1.4071
scale = Vector2( 12, 12 )
amount = 50
lifetime = 2.0
texture = ExtResource( 2 )
emission_shape = 1
emission_sphere_radius = 2.0
spread = 35.0
flatness = 1.0
gravity = Vector2( 0, 0 )
initial_velocity = 20.0
initial_velocity_random = 0.2
angular_velocity = 100.0
angular_velocity_random = 1.0
tangential_accel_random = 1.0
angle = 360.0
angle_random = 1.0
scale_amount = 0.3
scale_amount_random = 0.4
color_ramp = SubResource( 4 )

[node name="VisibilityNotifier2D" type="VisibilityNotifier2D" parent="House"]

[node name="ParallaxBackground" type="ParallaxBackground" parent="."]
editor/display_folded = true
script = SubResource( 5 )

[node name="ParallaxLayer" type="ParallaxLayer" parent="ParallaxBackground"]
editor/display_folded = true
motion_mirroring = Vector2( 1080, 1920 )

[node name="Bg1" type="Sprite" parent="ParallaxBackground/ParallaxLayer"]
self_modulate = Color( 0.588837, 0.438385, 0.664063, 1 )
texture = ExtResource( 3 )
centered = false

[node name="ParallaxLayer2" type="ParallaxLayer" parent="ParallaxBackground"]
editor/display_folded = true
motion_scale = Vector2( 1, 0.2 )
motion_mirroring = Vector2( 0, 1920 )

[node name="Cloud1" type="Sprite" parent="ParallaxBackground/ParallaxLayer2"]
texture = ExtResource( 4 )
centered = false

[node name="Star1" type="Sprite" parent="ParallaxBackground/ParallaxLayer2"]
modulate = Color( 1, 1, 1, 0 )
texture = ExtResource( 5 )
centered = false

[node name="ParallaxLayer3" type="ParallaxLayer" parent="ParallaxBackground"]
editor/display_folded = true
motion_scale = Vector2( 1, 0.3 )
motion_mirroring = Vector2( 0, 1920 )

[node name="Cloud2" type="Sprite" parent="ParallaxBackground/ParallaxLayer3"]
texture = ExtResource( 6 )
centered = false

[node name="Star2" type="Sprite" parent="ParallaxBackground/ParallaxLayer3"]
self_modulate = Color( 1, 1, 1, 0 )
texture = ExtResource( 7 )
centered = false

[node name="Tween" type="Tween" parent="ParallaxBackground"]

[node name="Player" parent="." instance=ExtResource( 8 )]
position = Vector2( 569.5, 830 )

[node name="UIGame" type="CanvasLayer" parent="."]
editor/display_folded = true
script = SubResource( 6 )

[node name="Container" type="Control" parent="UIGame"]
pause_mode = 2
editor/display_folded = true
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2

[node name="Panel" type="Panel" parent="UIGame/Container"]
editor/display_folded = true
anchor_right = 1.0
margin_bottom = 160.0

[node name="HBC" type="HBoxContainer" parent="UIGame/Container/Panel"]
anchor_right = 1.0
anchor_bottom = 1.0
size_flags_horizontal = 3
size_flags_vertical = 3

[node name="FishPanel" type="CenterContainer" parent="UIGame/Container/Panel/HBC"]
editor/display_folded = true
margin_right = 400.0
margin_bottom = 160.0
rect_min_size = Vector2( 400, 0 )
size_flags_vertical = 3

[node name="HBC" type="HBoxContainer" parent="UIGame/Container/Panel/HBC/FishPanel"]
margin_left = 56.0
margin_top = 32.0
margin_right = 344.0
margin_bottom = 128.0

[node name="Fish" type="TextureRect" parent="UIGame/Container/Panel/HBC/FishPanel/HBC"]
material = SubResource( 7 )
margin_right = 96.0
margin_bottom = 96.0
rect_min_size = Vector2( 96, 96 )
texture = ExtResource( 10 )
expand = true
stretch_mode = 6

[node name="FishLabel" type="Label" parent="UIGame/Container/Panel/HBC/FishPanel/HBC"]
editor/display_folded = true
margin_left = 100.0
margin_top = 4.0
margin_right = 288.0
margin_bottom = 91.0
custom_fonts/font = SubResource( 8 )
text = "9999"
valign = 1

[node name="Anim" type="AnimationPlayer" parent="UIGame/Container/Panel/HBC/FishPanel/HBC/FishLabel"]
anims/AddFish = SubResource( 9 )

[node name="AddFishLabel" type="Label" parent="UIGame/Container/Panel/HBC/FishPanel/HBC/FishLabel"]
editor/display_folded = true
modulate = Color( 1, 1, 1, 0 )
margin_left = 30.0
margin_top = 193.5
margin_right = 109.0
margin_bottom = 338.5
custom_fonts/font = SubResource( 10 )
text = "9"

[node name="TextureRect" type="TextureRect" parent="UIGame/Container/Panel/HBC/FishPanel/HBC/FishLabel/AddFishLabel"]
margin_left = -126.0
margin_top = 0.5
margin_right = -6.0
margin_bottom = 127.5
texture = ExtResource( 10 )
expand = true
stretch_mode = 6

[node name="TimePanel" type="Control" parent="UIGame/Container/Panel/HBC"]
margin_left = 404.0
margin_right = 676.0
margin_bottom = 160.0
size_flags_horizontal = 3
size_flags_vertical = 3

[node name="TimeLabel" type="Label" parent="UIGame/Container/Panel/HBC/TimePanel"]
editor/display_folded = true
anchor_right = 1.0
margin_bottom = 121.0
custom_fonts/font = SubResource( 11 )
text = "1:00"
align = 1
valign = 1

[node name="AddTimeLabel" type="Label" parent="UIGame/Container/Panel/HBC/TimePanel/TimeLabel"]
self_modulate = Color( 1, 1, 1, 0 )
anchor_left = 0.5
anchor_top = 1.0
anchor_right = 0.5
anchor_bottom = 1.0
margin_left = -230.0
margin_top = 75.0
margin_right = -5.00012
margin_bottom = 172.0
rect_scale = Vector2( 2, 2 )
custom_fonts/font = SubResource( 12 )
text = "99"
align = 1
valign = 1

[node name="Anim" type="AnimationPlayer" parent="UIGame/Container/Panel/HBC/TimePanel/TimeLabel"]
anims/AddTime = SubResource( 13 )

[node name="MeterLabel" type="Label" parent="UIGame/Container/Panel/HBC/TimePanel"]
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_top = -44.0
custom_fonts/font = SubResource( 14 )
text = "Meters: 9999"
align = 1
valign = 1
uppercase = true

[node name="CoinPanel" type="CenterContainer" parent="UIGame/Container/Panel/HBC"]
editor/display_folded = true
margin_left = 680.0
margin_right = 1080.0
margin_bottom = 160.0
rect_min_size = Vector2( 400, 0 )
size_flags_horizontal = 3
size_flags_vertical = 3

[node name="HBC" type="HBoxContainer" parent="UIGame/Container/Panel/HBC/CoinPanel"]
editor/display_folded = true
margin_left = 66.0
margin_top = 36.0
margin_right = 334.0
margin_bottom = 123.0

[node name="Coin" type="TextureRect" parent="UIGame/Container/Panel/HBC/CoinPanel/HBC"]
margin_right = 76.0
margin_bottom = 87.0
rect_min_size = Vector2( 76, 76 )
texture = ExtResource( 12 )
expand = true
stretch_mode = 6

[node name="CoinLabel" type="Label" parent="UIGame/Container/Panel/HBC/CoinPanel/HBC"]
editor/display_folded = true
margin_left = 80.0
margin_right = 268.0
margin_bottom = 87.0
grow_horizontal = 0
grow_vertical = 0
custom_fonts/font = SubResource( 15 )
text = "9999"

[node name="AddCoinLabel" type="Label" parent="UIGame/Container/Panel/HBC/CoinPanel/HBC/CoinLabel"]
modulate = Color( 1, 1, 1, 0 )
anchor_left = 0.5
anchor_top = 1.0
anchor_right = 0.5
anchor_bottom = 1.0
margin_left = -64.0
margin_top = 107.0
margin_right = 14.0
margin_bottom = 180.0
rect_scale = Vector2( 2, 2 )
custom_fonts/font = SubResource( 16 )
text = "99"

[node name="TextureRect" type="TextureRect" parent="UIGame/Container/Panel/HBC/CoinPanel/HBC/CoinLabel/AddCoinLabel"]
anchor_top = 0.5
anchor_bottom = 0.5
margin_left = -57.0
margin_top = -28.0
margin_right = -1.0
margin_bottom = 28.0
texture = ExtResource( 12 )
expand = true
stretch_mode = 6

[node name="Anim" type="AnimationPlayer" parent="UIGame/Container/Panel/HBC/CoinPanel/HBC/CoinLabel"]
anims/AddCoin = SubResource( 17 )

[node name="PauseButton" type="TextureButton" parent="UIGame/Container"]
pause_mode = 2
anchor_left = 1.0
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -134.0
margin_top = -129.0
margin_right = -13.0
margin_bottom = -11.0
toggle_mode = true
texture_normal = ExtResource( 13 )
texture_pressed = ExtResource( 14 )
expand = true
stretch_mode = 5

[node name="DeadPanel" type="TextureRect" parent="UIGame/Container"]
pause_mode = 2
editor/display_folded = true
self_modulate = Color( 0.466667, 0.768627, 0.698039, 0.807843 )
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -332.0
margin_top = -291.0
margin_right = 332.0
margin_bottom = 291.0
mouse_filter = 0
texture = ExtResource( 15 )
expand = true
stretch_mode = 1

[node name="Highscore" type="Label" parent="UIGame/Container/DeadPanel"]
anchor_left = 0.5
anchor_right = 0.5
margin_left = -380.0
margin_top = 31.0
margin_right = 384.0
margin_bottom = 240.0
rect_pivot_offset = Vector2( 357.5, 50 )
custom_fonts/font = SubResource( 24 )
custom_colors/font_color = Color( 1, 1, 1, 1 )
custom_colors/font_outline_modulate = Color( 0, 0, 0, 1 )
custom_colors/font_color_shadow = Color( 0, 0, 0, 1 )
custom_constants/shadow_as_outline = 1
text = "CURRENT HIGHSCORE
900m"
align = 1

[node name="Title" type="Label" parent="UIGame/Container/DeadPanel"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -350.0
margin_top = -80.0
margin_right = 345.0
margin_bottom = 29.0
custom_fonts/font = SubResource( 18 )
custom_colors/font_color = Color( 1, 1, 1, 1 )
custom_colors/font_outline_modulate = Color( 0, 0, 0, 1 )
custom_colors/font_color_shadow = Color( 0, 0, 0, 1 )
custom_constants/shadow_as_outline = 1
text = "Try again!"
align = 1

[node name="RestartButton" type="TextureButton" parent="UIGame/Container/DeadPanel"]
anchor_top = 1.0
anchor_bottom = 1.0
margin_left = 30.0
margin_top = -240.0
margin_right = 283.0
margin_bottom = -22.0
texture_normal = ExtResource( 17 )
texture_pressed = ExtResource( 18 )
expand = true
stretch_mode = 5

[node name="CloseButton" type="TextureButton" parent="UIGame/Container/DeadPanel"]
anchor_left = 1.0
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -265.0
margin_top = -260.0
margin_right = -45.0
texture_normal = ExtResource( 19 )
texture_pressed = ExtResource( 20 )
expand = true
stretch_mode = 5

[node name="Anim" type="AnimationPlayer" parent="UIGame/Container/DeadPanel"]
anims/HighscorePassed = SubResource( 25 )

[node name="PausePanel" type="NinePatchRect" parent="UIGame/Container"]
pause_mode = 2
editor/display_folded = true
visible = false
self_modulate = Color( 0, 0.701961, 1, 0.388235 )
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -357.5
margin_top = -230.0
margin_right = 357.5
margin_bottom = 230.0
mouse_filter = 0
texture = ExtResource( 15 )

[node name="HomeButton" type="TextureButton" parent="UIGame/Container/PausePanel"]
anchor_top = 1.0
anchor_bottom = 1.0
margin_left = 27.5
margin_top = -210.0
margin_right = 256.5
margin_bottom = -30.0
texture_normal = ExtResource( 21 )
texture_pressed = ExtResource( 22 )
expand = true
stretch_mode = 5

[node name="ContinueButton" type="TextureButton" parent="UIGame/Container/PausePanel"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -142.0
margin_top = -126.0
margin_right = 142.0
margin_bottom = 126.0
texture_normal = ExtResource( 17 )
texture_pressed = ExtResource( 18 )
expand = true
stretch_mode = 5

[node name="ConfigButton" type="TextureButton" parent="UIGame/Container/PausePanel"]
anchor_left = 1.0
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -257.5
margin_top = -216.0
margin_right = -24.5
margin_bottom = -32.0
texture_normal = ExtResource( 23 )
texture_pressed = ExtResource( 24 )
expand = true
stretch_mode = 5

[node name="PauseLabel" type="Label" parent="UIGame/Container/PausePanel"]
anchor_right = 1.0
margin_bottom = 86.0
custom_fonts/font = SubResource( 19 )
text = "GAME PAUSED"
align = 1
valign = 1

[node name="DebugButton" type="TextureButton" parent="UIGame/Container/PausePanel"]
margin_right = 98.0
margin_bottom = 104.0

[node name="ConfigPanel" parent="UIGame/Container" instance=ExtResource( 25 )]
pause_mode = 2
visible = false
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -345.0
margin_top = -270.0
margin_right = 345.0
margin_bottom = 270.0
mouse_filter = 0

[node name="Transition" type="TextureRect" parent="UIGame/Container"]
editor/display_folded = true
self_modulate = Color( 0, 0, 0, 0 )
margin_right = 40.0
margin_bottom = 40.0
mouse_filter = 2
texture = ExtResource( 3 )

[node name="CatHead" type="TextureRect" parent="UIGame/Container/Transition"]
modulate = Color( 1, 1, 1, 0 )
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -75.0
margin_top = -95.0
margin_right = 75.0
margin_bottom = 95.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2
texture = ExtResource( 26 )
expand = true
stretch_mode = 6

[node name="Anim" type="AnimationPlayer" parent="UIGame/Container/Transition"]
autoplay = "FadeOut"
anims/FadeOut = SubResource( 20 )
anims/Restart = SubResource( 21 )

[node name="DebugPanel" type="Panel" parent="UIGame"]
editor/display_folded = true
visible = false
anchor_top = 1.0
anchor_bottom = 1.0
margin_top = -497.0
margin_right = 296.0

[node name="VBoxContainer" type="VBoxContainer" parent="UIGame/DebugPanel"]
anchor_right = 1.0
anchor_bottom = 1.0

[node name="Invencible" type="Button" parent="UIGame/DebugPanel/VBoxContainer"]
margin_right = 296.0
margin_bottom = 64.0
rect_min_size = Vector2( 0, 64 )
custom_fonts/font = SubResource( 22 )
text = "Invencible"

[node name="Currency" type="Button" parent="UIGame/DebugPanel/VBoxContainer"]
margin_top = 68.0
margin_right = 296.0
margin_bottom = 132.0
rect_min_size = Vector2( 0, 64 )
custom_fonts/font = SubResource( 23 )
text = "Currency"

[node name="ResetGame" type="Button" parent="UIGame/DebugPanel/VBoxContainer"]
margin_top = 136.0
margin_right = 296.0
margin_bottom = 200.0
rect_min_size = Vector2( 0, 64 )
custom_fonts/font = SubResource( 23 )
text = "RESET GAME STATE"

[node name="Button" type="Button" parent="UIGame/DebugPanel"]
margin_left = 80.0
margin_top = 427.0
margin_right = 200.0
margin_bottom = 495.0
text = "X"

[node name="CollectableSpawner" parent="." instance=ExtResource( 27 )]
item_list = [ ExtResource( 28 ), ExtResource( 29 ) ]
parent_node = NodePath("../Collectables")
min_height = 8.0
max_height = 10.0
probability = [ 0.1, 1.0 ]

[node name="EnemySpawner" parent="." instance=ExtResource( 30 )]
item_list = [ ExtResource( 31 ), ExtResource( 32 ), ExtResource( 33 ) ]
parent_node = NodePath("../Enemies")
height_control_list = [ 0, 200, 500 ]

[node name="RibbonSpawner" parent="." instance=ExtResource( 34 )]
item_list = [ ExtResource( 35 ) ]
parent_node = NodePath("../Ribbons")
min_height = 10.0
max_height = 15.0

[node name="Collectables" type="Node2D" parent="."]

[node name="Enemies" type="Node2D" parent="."]

[node name="Ribbons" type="Node2D" parent="."]

[node name="CoinTimer" type="Timer" parent="."]
one_shot = true

[connection signal="screen_exited" from="House/VisibilityNotifier2D" to="House" method="_on_VisibilityNotifier2D_screen_exited"]
[connection signal="button_down" from="UIGame/Container/PauseButton" to="UIGame" method="_on_PauseButton_button_down"]
[connection signal="button_down" from="UIGame/Container/DeadPanel/RestartButton" to="." method="_on_RestartButton_button_down"]
[connection signal="button_down" from="UIGame/Container/DeadPanel/CloseButton" to="." method="_on_CloseButton_button_down"]
[connection signal="button_down" from="UIGame/Container/PausePanel/HomeButton" to="UIGame" method="_on_HomeButton_button_down"]
[connection signal="button_down" from="UIGame/Container/PausePanel/ContinueButton" to="UIGame" method="_on_ContinueButton_button_down"]
[connection signal="button_down" from="UIGame/Container/PausePanel/ConfigButton" to="UIGame" method="_on_ConfigButton_button_down"]
[connection signal="button_down" from="UIGame/Container/PausePanel/DebugButton" to="." method="_on_DebugButton_button_down"]
[connection signal="animation_finished" from="UIGame/Container/Transition/Anim" to="UIGame" method="_on_Anim_animation_finished"]
[connection signal="button_down" from="UIGame/DebugPanel/VBoxContainer/Invencible" to="Player" method="_on_Invencible_button_down"]
[connection signal="button_down" from="UIGame/DebugPanel/VBoxContainer/Currency" to="." method="_on_Currency_button_down"]
[connection signal="button_down" from="UIGame/DebugPanel/VBoxContainer/ResetGame" to="." method="_on_ResetGame_button_down"]
[connection signal="button_down" from="UIGame/DebugPanel/Button" to="." method="_on_Button_button_down"]
[connection signal="timeout" from="CoinTimer" to="." method="_on_CoinTimer_timeout"]
