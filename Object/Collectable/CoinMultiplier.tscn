[gd_scene load_steps=12 format=2]

[ext_resource path="res://Sprites/Shop/UI/upgrade_coin_icon.png" type="Texture" id=1]
[ext_resource path="res://Sprites/Collectables/Coin.png" type="Texture" id=2]
[ext_resource path="res://Sounds/Sfx/BuyItem.wav" type="AudioStream" id=3]

[sub_resource type="GDScript" id=1]
script/source = "extends 'res://Object/Collectable/Collectable.gd'

onready var coin_item : ItemManager.UpgradeItem = ItemManager.get_upgrade_item_by_type(ItemManager.UpgradeType.CURRENCY)
onready var coin_time_modifier : int = coin_item.get_current_modifier()

func _ready():
	randomize()
	connect('taken',game_scene,'on_coin_multiplier')
	pass

func _process(delta):
	if GameManager.is_player_invencible():
		dispose_object()
	pass

func _on_Coin_body_entered(body):
	if body.is_in_group('Player'):
		on_take()
	pass

func on_take():
	if !can_be_taked():
		return
	taked = true
	emit_signal('taken', coin_time_modifier)
	$Particles.restart()
	$Anim.play('Taken')
	$Sample.play()
	pass

func _on_Coin_area_entered(area):
	if area.name == 'MagnetArea' and !on_magnet_area and activated:
		player_magnet = area
		on_magnet_area = !on_magnet_area
	pass

func reset():
	$Anim.play_backwards('Taken')
	$Particles.emitting = false
	pass

func _on_Coin_active(val):
	if val:
		$Anim.play('Idle')
	else:
		reset()
	pass # Replace with function body.
"

[sub_resource type="Shader" id=2]
code = "shader_type canvas_item;

uniform float outline_width = 2.0;
uniform vec4 outline_color : hint_color;

void fragment() {
	vec4 col = texture(TEXTURE, UV);
	vec2 ps = TEXTURE_PIXEL_SIZE;
	float a;
	float maxa = col.a;
	float mina = col.a;

	a = texture(TEXTURE, UV + vec2(0.0, -outline_width) * ps).a;
	maxa = max(a, maxa);
	mina = min(a, mina);

	a = texture(TEXTURE, UV + vec2(0.0, outline_width) * ps).a;
	maxa = max(a, maxa);
	mina = min(a, mina);

	a = texture(TEXTURE, UV + vec2(-outline_width, 0.0) * ps).a;
	maxa = max(a, maxa);
	mina = min(a, mina);

	a = texture(TEXTURE, UV + vec2(outline_width, 0.0) * ps).a;
	maxa = max(a, maxa);
	mina = min(a, mina);

	COLOR = mix(col, outline_color, maxa - mina);
}"

[sub_resource type="ShaderMaterial" id=9]
shader = SubResource( 2 )
shader_param/outline_width = 1.4
shader_param/outline_color = Color( 1, 1, 1, 0.319048 )

[sub_resource type="CircleShape2D" id=4]
radius = 59.4166

[sub_resource type="Curve" id=5]
_data = [ Vector2( 0, 0.0181818 ), 0.0, 2.32187, 0, 0, Vector2( 0.984127, 1 ), -0.176872, 0.0, 0, 0 ]

[sub_resource type="Gradient" id=6]
offsets = PoolRealArray( 0, 0.283133, 0.668675, 1 )
colors = PoolColorArray( 0.956863, 0.752941, 0.278431, 0, 1, 0.960784, 0, 1, 1, 0.960784, 0, 1, 1, 0.960784, 0, 0 )

[sub_resource type="Animation" id=7]
length = 1.2
loop = true
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.6 ),
"transitions": PoolRealArray( 0.5, 2 ),
"update": 0,
"values": [ Vector2( 0.7, 0.7 ), Vector2( 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sprite:material:shader_param/outline_color")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0.05, 0.55 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0.266667 ), Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="Animation" id=8]
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:self_modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sprite:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.2, 0.4 ),
"transitions": PoolRealArray( 0.5, 2, 1 ),
"update": 0,
"values": [ Vector2( 0.7, 0.7 ), Vector2( 1.13198, 1.13198 ), Vector2( 0.198898, 0.198898 ) ]
}

[node name="CoinMultiplier" type="Area2D"]
z_index = 8
script = SubResource( 1 )

[node name="Sprite" type="Sprite" parent="."]
self_modulate = Color( 1, 1, 1, 0 )
material = SubResource( 9 )
scale = Vector2( 0.198898, 0.198898 )
texture = ExtResource( 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource( 4 )

[node name="Particles" type="CPUParticles2D" parent="."]
z_index = 12
emitting = false
amount = 20
lifetime = 2.0
one_shot = true
speed_scale = 3.0
explosiveness = 0.8
randomness = 1.0
lifetime_randomness = 0.5
texture = ExtResource( 2 )
spread = 180.0
gravity = Vector2( 0, 0 )
initial_velocity = 200.0
initial_velocity_random = 0.2
damping = 80.0
angle = 360.0
angle_random = 1.0
scale_amount = 2.0
scale_amount_random = 0.2
scale_amount_curve = SubResource( 5 )
color_ramp = SubResource( 6 )

[node name="Sample" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource( 3 )
volume_db = -16.0
bus = "Sounds"

[node name="Anim" type="AnimationPlayer" parent="."]
autoplay = "Idle"
anims/Idle = SubResource( 7 )
anims/Taken = SubResource( 8 )
[connection signal="active" from="." to="." method="_on_Coin_active"]
[connection signal="area_entered" from="." to="." method="_on_Coin_area_entered"]
[connection signal="body_entered" from="." to="." method="_on_Coin_body_entered"]
