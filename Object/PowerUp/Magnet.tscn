[gd_scene load_steps=11 format=2]

[ext_resource path="res://Sprites/Collectables/MagnetOutlined.png" type="Texture" id=1]
[ext_resource path="res://Sprites/Particles/Cross.png" type="Texture" id=2]

[sub_resource type="GDScript" id=1]
script/source = "extends \"res://Object/Collectable/Collectable.gd\"

func _process(delta):
	if GameManager.player.invencible:
		dispose_object()
	pass


func _on_Magnet_body_entered(body):
	if body.is_in_group('Player') and !taked and activated:
		taked = !taked
		$Anim.play('Taken')
		body.activate_magnet()
	pass # Replace with function body.

func _on_Magnet_area_entered(area):
	if area.name == 'MagnetArea' and !on_magnet_area and activated:
		player_magnet = area
		on_magnet_area = !on_magnet_area
	pass # Replace with function body.

func _on_Magnet_active(val):
	if val:
		$Anim.queue('Idle')
	else:
		$Anim.play_backwards('Taken')
	pass # Replace with function body.

func _on_VisibilityNotifier2D_screen_exited():
	dispose_object()
	pass # Replace with function body.
"

[sub_resource type="Shader" id=2]
code = "shader_type canvas_item;

uniform float outline_width = 2.0;
uniform vec4 outline_color : hint_color;

void fragment() {
	vec4 col = texture(TEXTURE, UV);
	vec2 ps = TEXTURE_PIXEL_SIZE;
	float a;
	float maxa = col.a;
	float mina = col.a;

	a = texture(TEXTURE, UV + vec2(0.0, -outline_width) * ps).a;
	maxa = max(a, maxa);
	mina = min(a, mina);

	a = texture(TEXTURE, UV + vec2(0.0, outline_width) * ps).a;
	maxa = max(a, maxa);
	mina = min(a, mina);

	a = texture(TEXTURE, UV + vec2(-outline_width, 0.0) * ps).a;
	maxa = max(a, maxa);
	mina = min(a, mina);

	a = texture(TEXTURE, UV + vec2(outline_width, 0.0) * ps).a;
	maxa = max(a, maxa);
	mina = min(a, mina);

	COLOR = mix(col, outline_color, maxa - mina);
}"

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 2 )
shader_param/outline_width = 0.5
shader_param/outline_color = Color( 1, 1, 1, 1 )

[sub_resource type="CircleShape2D" id=4]
radius = 71.6309

[sub_resource type="Animation" id=5]
length = 1.2
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:rotation_degrees")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.6 ),
"transitions": PoolRealArray( 0.5, 0.5 ),
"update": 0,
"values": [ 32.4491, -26.233 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sprite:material:shader_param/outline_color")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.3, 0.6, 0.9, 1.2 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="Animation" id=6]
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2, 0.4 ),
"transitions": PoolRealArray( 0.5, 2, 1 ),
"update": 0,
"values": [ Vector2( 3, 3 ), Vector2( 4, 4 ), Vector2( 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sprite:self_modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.3, 0.5 ),
"transitions": PoolRealArray( 1, 0.5, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("BluePartiles:emitting")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("RedParticles:emitting")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}

[sub_resource type="Gradient" id=7]
offsets = PoolRealArray( 0, 0.765432, 1 )
colors = PoolColorArray( 0.196078, 0.34902, 0.886275, 1, 0.211765, 0.223529, 0.85098, 0.745098, 0.211765, 0.223529, 0.85098, 0 )

[sub_resource type="Gradient" id=8]
offsets = PoolRealArray( 0, 0.753247, 1 )
colors = PoolColorArray( 0.921569, 0.156863, 0.137255, 1, 0.921569, 0.156863, 0.137255, 0.768627, 0.921569, 0.156863, 0.137255, 0.14902 )

[node name="Magnet" type="Area2D"]
script = SubResource( 1 )

[node name="Sprite" type="Sprite" parent="."]
self_modulate = Color( 1, 1, 1, 0 )
material = SubResource( 3 )
position = Vector2( -0.26564, -4.54848 )
rotation = 0.566344
texture = ExtResource( 1 )
offset = Vector2( 0.26564, 4.54848 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2( -1.26224, 7.25788 )
shape = SubResource( 4 )

[node name="Anim" type="AnimationPlayer" parent="."]
autoplay = "Idle"
anims/Idle = SubResource( 5 )
anims/Taken = SubResource( 6 )

[node name="VisibilityNotifier2D" type="VisibilityNotifier2D" parent="."]

[node name="BluePartiles" type="CPUParticles2D" parent="."]
emitting = false
amount = 20
one_shot = true
explosiveness = 0.9
texture = ExtResource( 2 )
emission_shape = 1
emission_sphere_radius = 5.0
spread = 90.0
gravity = Vector2( 0, 0 )
initial_velocity = 200.0
angular_velocity = 50.0
angular_velocity_random = 1.0
tangential_accel = -5.0
tangential_accel_random = 0.2
damping = 100.0
angle = 360.0
angle_random = 1.0
scale_amount = 1.5
color_ramp = SubResource( 7 )

[node name="RedParticles" type="CPUParticles2D" parent="."]
rotation = 3.14159
emitting = false
amount = 20
one_shot = true
explosiveness = 0.9
texture = ExtResource( 2 )
emission_shape = 1
emission_sphere_radius = 5.0
spread = 90.0
gravity = Vector2( 0, 0 )
initial_velocity = 200.0
angular_velocity = 50.0
tangential_accel = -5.0
tangential_accel_random = 0.2
damping = 100.0
angle = 360.0
angle_random = 1.0
scale_amount = 1.5
color_ramp = SubResource( 8 )
[connection signal="active" from="." to="." method="_on_Magnet_active"]
[connection signal="area_entered" from="." to="." method="_on_Magnet_area_entered"]
[connection signal="body_entered" from="." to="." method="_on_Magnet_body_entered"]
[connection signal="screen_exited" from="VisibilityNotifier2D" to="." method="_on_VisibilityNotifier2D_screen_exited"]
