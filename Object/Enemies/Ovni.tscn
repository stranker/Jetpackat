[gd_scene load_steps=4 format=2]

[ext_resource path="res://Sprites/Enemies/Ovni.png" type="Texture" id=1]

[sub_resource type="GDScript" id=1]
script/source = "extends Area2D

export var speed : float = 300
export var increment : float = 50
export var max_speed : float = 500
var velocity : Vector2
var direction = -1
var sprite_size : Vector2


func _ready():
	randomize()
	if rand_range(0,1) > 0.5:
		change_direction()
	sprite_size = $Sprite.texture.get_size() * $Sprite.scale
	velocity.x = direction * speed
	pass

func _process(delta):
	translate(velocity * delta)
	check_boundaries()
	pass

func check_boundaries():
	if position.x < -sprite_size.x / 2 or position.x > get_viewport_rect().size.x + sprite_size.x/2:
		change_direction()
		speed += increment
		if speed > max_speed:
			speed = max_speed
		velocity.x = direction * speed
	pass

func change_direction():
	direction = -direction
	$Sprite.scale.x *= -1
	$Sprite.rotation = -$Sprite.rotation
	$CollisionPolygon2D.rotation = -$CollisionPolygon2D.rotation
	pass"

[sub_resource type="Animation" id=2]
resource_name = "Run"
length = 2.0
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5, 1, 1.2 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 2, 1, 0 ]
}

[node name="Ovni" type="Area2D"]
script = SubResource( 1 )
increment = 200.0

[node name="Sprite" type="Sprite" parent="."]
rotation = -0.231232
scale = Vector2( 2, 2 )
texture = ExtResource( 1 )
hframes = 3
frame = 1

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="."]
rotation = -0.269674
polygon = PoolVector2Array( -61.674, -55.2344, -35.6308, 23.2373, -84.8551, 47.5565, 7.01563, 66.5552, 81.947, 54.4289, 31.4723, 24.1303, 67.9194, -46.223, 4.26329, -69.0491 )

[node name="PreparingTimer" type="Timer" parent="."]
one_shot = true

[node name="Anim" type="AnimationPlayer" parent="."]
autoplay = "Run"
anims/Run = SubResource( 2 )

[connection signal="timeout" from="PreparingTimer" to="." method="_on_PreparingTime_timeout"]
